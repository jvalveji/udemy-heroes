// =========================================
//   __ _ _ __ ___ __ _
//  / _` | '__/ __/ _` |
// | (_| | | | (_| (_| |
//  \__,_|_|  \___\__,_|
//
//  arca styles.scss
//  07.2019
//  afallasp@ccss.sa.cr
// =========================================

// Variables css
$array-map: null;

// Variables css
:root {
	--ar-color-base: #0d1b2a;
	--ar-color-white: 255, 255, 255;
	--ar-color-black: 1, 1, 1;
	--ar-color-blue: 33, 150, 243;
	--ar-color-red: 244, 67, 54;
	--ar-color-green: 76, 175, 80;
	--ar-color-orange: 255, 152, 0;
	--ar-color-yellow: 255, 193, 7;
	--ar-color-cyan: 0, 188, 212;
	--ar-color-purple: 156, 39, 176;
	--ar-color-lime: 205, 220, 57;
	--ar-color-amber: 255, 193, 7;
	--ar-blue: #2196f3;
	--ar-red: #f44336;
	--ar-green: #4caf50;
	--ar-orange: #ff9800;
	--ar-yellow: #ffeb3b;
	--ar-cyan: #00bcd4;
	--ar-teal: #009688;
	--ar-purple: #9c27b0;
	--ar-lime: #8bc34a;
	--ar-amber: #ffc107;
}

// Variables para el servidor de Webkit
$webKitServer: "https://arcapruebas.ccss.sa.cr/webkit";

// Alternativa de estilos del tema dark y tema light incluido en arca-theme.scss para alternar
// el uso de ambos temas (por defecto o tema dark)
// `.ar-theme-dark` afectará sobre el tema por defecto

@mixin customize($arg: ar-theme) {
	$array: $themes;
	$prefix: ar-theme;

	@if ($arg==theme) {
		$array: $themes;
		$prefix: ar-theme;
	} @else {
		$array: $color-schemes;
		$prefix: color;
	}

	@each $theme, $map in $array {
		.#{$prefix}-#{$theme} & {
			$array-map: () !global;

			@each $key, $submap in $map {
				$value: map-get(map-get($array, $theme), "#{$key}");
				$array-map: map-merge(
					$array-map,
					(
						$key: $value,
					)
				) !global;
			}

			@content;
			$array-map: null !global;
		}
	}
}

@function getValue($key) {
	@return map-get($array-map, $key);
}

// Permite dar color al área total en los diálogos

.ar-theme-dark,
.ar-theme-light {
	height: 100%;
}

//
// Definiciones del Tema
//

$themes: (
	light: (
		// Background color del tema
		arBackgroundThemeColor: rgba(var(--ar-color-white), 1),
		// Background color del tema
		arBackgroundThemeColorInverse: #0d1b2a,
		// Toolbar background color del tema
		arBackgroundToolbarColor: rgba(var(--ar-color-white), 1),
		// Background color de tarjetas
		arBackgroundCardColor: rgba(var(--ar-color-white), 1) !important,
		// Color del borde de las tarjetas
		arColorCardBorder: rgba(1, 1, 1, 0.12) !important,
		// Background color de chips
		arBackgroundChipColor: #0d1b2a !important,
		// Color base inverso
		arColorInverse: rgba(var(--ar-color-white), 1) !important,
		// Color base con diferentes opacidades
		arColor: rgba(0, 0, 0, 1) !important,
		arColor87: rgba(0, 0, 0, 0.87) !important,
		arColor54: rgba(0, 0, 0, 0.54) !important,
		arColor38: rgba(0, 0, 0, 0.38) !important,
		arColor12: rgba(0, 0, 0, 0.12) !important,
		arColor02: rgba(0, 0, 0, 0.02) !important,
		arColor01: rgba(0, 0, 0, 0.01) !important,
		// Elevación base con diferentes opacidades (dpi)
		arElevation01: rgba(0, 0, 0, 0.05) !important,
		arElevation02: rgba(0, 0, 0, 0.07) !important,
		arElevation03: rgba(0, 0, 0, 0.08) !important,
		arElevation04: rgba(0, 0, 0, 0.09) !important,
		arElevation06: rgba(0, 0, 0, 0.11) !important,
		arElevation08: rgba(0, 0, 0, 0.12) !important,
		arElevation12: rgba(0, 0, 0, 0.14) !important,
		arElevation16: rgba(0, 0, 0, 0.15) !important,
		arElevation24: rgba(0, 0, 0, 0.16) !important,
		// Elevación base sin opacidad
		arElevationBase: rgba(var(--ar-color-white), 1) !important,
	),
	dark: (
		// Background color del tema
		arBackgroundThemeColor: #0d1b2a !important,
		// Background color del tema
		arBackgroundThemeColorInverse: rgba(var(--ar-color-white), 1),
		// Toolbar background color del tema
		arBackgroundToolbarColor: #0d1b2a,
		// Background color de tarjetas
		arBackgroundCardColor: rgba(255, 255, 255, 0.05) !important,
		// Background color de chips
		arBackgroundChipColor: rgba(var(--ar-color-white), 1) !important,
		// Color del borde de las tarjetas
		arColorCardBorder: #0d1b2a !important,
		// Color base inverso
		arColorInverse: rgba(0, 0, 0, 1) !important,
		// Color base con diferentes opacidades
		arColor: rgba(var(--ar-color-white), 1) !important,
		arColor87: rgba(var(--ar-color-white), 0.87) !important,
		arColor54: rgba(var(--ar-color-white), 0.6) !important,
		arColor38: rgba(var(--ar-color-white), 0.38) !important,
		arColor26: rgba(var(--ar-color-white), 0.26) !important,
		arColor12: rgba(var(--ar-color-white), 0.12) !important,
		arColor02: rgba(var(--ar-color-white), 0.02) !important,
		arColor01: rgba(var(--ar-color-white), 0.01) !important,
		// Elevation base con diferentes opacidades (dpi)
		arElevation01: rgba(255, 255, 255, 0.05) !important,
		arElevation02: rgba(255, 255, 255, 0.07) !important,
		arElevation03: rgba(255, 255, 255, 0.08) !important,
		arElevation04: rgba(255, 255, 255, 0.09) !important,
		arElevation06: rgba(255, 255, 255, 0.11) !important,
		arElevation08: rgba(255, 255, 255, 0.12) !important,
		arElevation12: rgba(255, 255, 255, 0.14) !important,
		arElevation16: rgba(255, 255, 255, 0.15) !important,
		arElevation24: rgba(255, 255, 255, 0.16) !important,
		// Elevación base
		arElevationBase: rgba(255, 255, 255, 0.05) !important,
	),
);

//
// Implementación del Tema
//
@mixin themify($themes) {
	@each $theme, $map in $themes {
		.theme-#{$theme} & {
			$theme-map: () !global;

			@each $key, $submap in $map {
				$value: map-get(map-get($themes, $theme), "#{$key}");
				$theme-map: map-merge(
					$theme-map,
					(
						$key: $value,
					)
				) !global;
			}

			@content;
			$theme-map: null !global;
		}
	}
}

@function themed($key) {
	@return map-get($theme-map, $key);
}

// Permite dar color al área total en los diálogos

.ar-theme-dark,
.ar-theme-light {
	height: 100%;
}

//Base del tamaño (1rem=16)
//******************************************
$basicSize: 16;

//Mixin para ancho y alto
//******************************************
@mixin width-height($width, $height) {
	width: ($width/$basicSize) + rem;
	height: ($height/$basicSize) + rem;
}

@mixin width($width) {
	width: ($width/$basicSize) + rem;
}

@mixin height($height) {
	height: ($height/$basicSize) + rem;
}

// ======================================
// Estilos de acuerdo a tema seleccionado
// ======================================

/* Color base */
.ar-color-100 {
	@include customize(theme) {
		color: getValue(arColor);
	}
}

/* Color de énfasis */
.ar-color-87 {
	@include customize(theme) {
		color: getValue(arColor87);
	}
}

/* Color de énfasis medio */
.ar-color-54 {
	@include customize(theme) {
		color: getValue(arColor54);
	}
}

/* Color deshabilitado */
.ar-color-38 {
	@include customize(theme) {
		color: getValue(arColor38);
	}
}

/* Color opacidad 12% */
.ar-color-12 {
	@include customize(theme) {
		color: getValue(arColor12);
	}
}

/* Color red */
.ar-color-red {
	@include customize(theme) {
		color: rgba(var(--ar-color-red), 1);
	}
}

/* Color green */
.ar-color-green {
	@include customize(theme) {
		color: rgba(var(--ar-color-green), 1);
	}
}

/* Color blue */
.ar-color-blue {
	@include customize(theme) {
		color: rgba(var(--ar-color-blue), 1);
	}
}

/* Color orange */
.ar-color-orange {
	@include customize(theme) {
		color: rgba(var(--ar-color-orange), 1);
	}
}

/* Color lime */
.ar-color-lime {
	@include customize(theme) {
		color: rgba(var(--ar-color-lime), 1);
	}
}

/* Color yellow */
.ar-color-yellow {
	@include customize(theme) {
		color: rgba(var(--ar-color-yellow), 1);
	}
}

/* Color blue opacidad 87 */
.ar-color-blue-87 {
	@include customize(theme) {
		color: rgba(var(--ar-color-blue), 0.54);
	}
}

/* Color orange opacidad 87 */
.ar-color-orange-87 {
	@include customize(theme) {
		color: rgba(var(--ar-color-orange), 0.54);
	}
}

/*
 * Elevación dpi
 * En temas por defecto, usar sombras para expresar elevación.
 * En dark theme la elevación también se expresa ajustando
 * el color de superficie.
*/

.ar-elevation-01 {
	@include customize(theme) {
		background-color: getValue(arElevation01);
	}
}

.ar-elevation-02 {
	@include customize(theme) {
		background-color: getValue(arElevation02);
	}
}

.ar-elevation-03 {
	@include customize(theme) {
		background-color: getValue(arElevation03);
	}
}

.ar-elevation-04 {
	@include customize(theme) {
		background-color: getValue(arElevation04);
	}
}

.ar-elevation-06 {
	@include customize(theme) {
		background-color: getValue(arElevation06);
	}
}

.ar-elevation-08 {
	@include customize(theme) {
		background-color: getValue(arElevation08);
	}
}

.ar-elevation-12 {
	@include customize(theme) {
		background-color: getValue(arElevation12);
	}
}

.ar-elevation-16 {
	@include customize(theme) {
		background-color: getValue(arElevation16);
	}
}

.ar-elevation-24 {
	@include customize(theme) {
		background-color: getValue(arElevation24);
	}
}

.ar-elevation-38 {
	@include customize(theme) {
		background-color: getValue(arColor38);
	}
}

.ar-elevation-54 {
	@include customize(theme) {
		background-color: getValue(arColor54);
	}
}

.ar-elevation-base {
	@include customize(theme) {
		background-color: getValue(arElevationBase);
	}
}

.ar-elevation-blue-01 {
	background-color: rgba(var(--ar-color-blue), 0.05) !important;
}

.ar-elevation-orange-01 {
	background-color: rgba(var(--ar-color-orange), 0.05) !important;
}

.ar-elevation-purple-01 {
	background-color: rgba(var(--ar-color-purple), 0.05) !important;
}

.ar-elevation-red-01 {
	background-color: rgba(var(--ar-color-red), 0.05) !important;
}

.ar-elevation-yellow-01 {
	background-color: rgba(var(--ar-color-yellow), 0.05) !important;
}

.ar-elevation-green-01 {
	background-color: rgba(var(--ar-color-green), 0.05) !important;
}

.ar-elevation-teal-01 {
	background-color: rgba(var(--ar-color-teal), 0.05) !important;
}

.ar-elevation-deep-purple-01 {
	background-color: rgba(var(--ar-color-deep-purple), 0.05) !important;
}

// ======================================
// Estilos generales
// ======================================

// Color de fondo de la aplicación
$ar-background-color: #2b2b33 !important;

// Color de fondo de la aplicación de acuerdo al tema
.ar-background {
	@include customize(theme) {
		background-color: getValue(arBackgroundThemeColor);
	}
}

// Color de fondo de la columna 1
.ar-background-secondary {
	@include customize(theme) {
		background-color: getValue(arBackgroundSecondary);
	}
}

// Color de fondo de la columna 1
.ar-background-tertiary {
	@include customize(theme) {
		background-color: getValue(arBackgroundTertiary);
	}
}

// Color de background red
.ar-background-red {
	background-color: rgba(var(--ar-color-red), 0.74);
}

// Color de background red
.ar-background-purple {
	background-color: rgba(var(--ar-color-purple), 0.74);
}

// Color de background blue
.ar-background-blue {
	background-color: rgba(var(--ar-color-blue), 0.74);
}

// Color de background yellow
.ar-background-yellow {
	background-color: rgba(var(--ar-color-yellow), 0.74);
}

// Color de background orange
.ar-background-orange {
	background-color: rgba(var(--ar-color-orange), 0.74);
}

// Color de fondo inverso de la aplicación de acuerdo al tema
.ar-background-inverse {
	@include customize(theme) {
		background-color: getValue(arBackgroundThemeColorInverse);
	}
}

// Color de fondo de las tarjetas
.ar-background-card {
	@include customize(theme) {
		background-color: getValue(arBackgroundCardColor);
	}

	@include customize(theme) {
		border-color: getValue(arColorCardBorder);
		border: 1px solid;
	}
}

// Color de fondo de las tarjetas sin transparencia
.ar-background-card-up {
	@include customize(theme) {
		background-color: getValue(arBackgroundCardColorUp);
	}
}

// Esquinas redondeadas
@mixin border-radius($radius) {
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	-ms-border-radius: $radius;
	border-radius: $radius;
}

// Esquinas redondeadas 2px
.ar-border-radio-2 {
	@include border-radius(2px);
}

// Esquinas redondeadas 4px
.ar-border-radio-4 {
	@include border-radius(4px);
}

// Esquinas redondeadas 8px
.ar-border-radio-8 {
	@include border-radius(8px);
}

// Esquinas redondeadas 16px
.ar-border-radio-16 {
	@include border-radius(16px);
}

// Esquinas redondeadas 32px
.ar-border-radio-32 {
	@include border-radius(32px);
}

// Border sólido 38%
.ar-border-38 {
	@include customize(theme) {
		border-color: getValue(arColor38);
		border: 1px solid;
	}
}

// Border sólido 12%
.ar-border-12 {
	@include customize(theme) {
		border-color: getValue(arColor12);
		border: 1px solid;
	}
}

// Border sólido 05%
.ar-border-05 {
	@include customize(theme) {
		border-color: getValue(arElevation01);
		border: 1px solid;
	}
}

// Proyección de sombra
@mixin box-shadow($shadow) {
	-webkit-box-shadow: $shadow !important;
	-moz-box-shadow: $shadow !important;
	box-shadow: $shadow !important;
}

/*
 * .scss que crea "margin helpers" y "padding helpers".
 * Éste scss genera múltiples clases como:
 * .ar-margin-right-xs que crea un margin-right de 10 (0.625rem) pixeles.
 * .ar-margin-top-md que crea un margin hacia arriba de 40 (2.5rem) pixeles.
 * Acepta las posiciones top, bottom, left, right, vertical (top-bottom) y horizontal (right-left)
 * y todos (top,right,bottom,left)
 * La primeras palabras con "ar-margin" o "ar-padding" para MARGIN o PADDING
 * La segunda palabra es "top", "bottom", "left", or "right"
 * La tercera letra es el número de pixeles.
 * Unidades en rem.
*/

// $sizeUnit: rem;
$marginKey: "ar-margin-";
$paddingKey: "ar-padding-";
$separator: "-";
$allKey: "all";
$verticalKey: "vertical";
$horizontalKey: "horizontal";
$positions: (
	top: "top",
	right: "right",
	bottom: "bottom",
	left: "left",
);
$sizes: (
	none: 0rem,
	xxs: 0.325rem,
	xs: 0.625rem,
	sm: 1.25rem,
	md: 2.5rem,
	lg: 3.75rem,
	xlg: 5rem,
	xxl: 6.25rem,
	05: 5%,
	10: 10%,
	15: 14%,
	20: 20%,
	25: 25%,
	30: 30%,
	35: 35%,
	40: 40%,
	45: 45%,
	50: 50%,
);

@function size-value($value) {
	@if $value==0 {
		@return $value;
	}

	@if $value== "auto" {
		@return $value;
	}

	@return #{$value};
}

@each $sizeKey, $sizeValue in $sizes {
	// "all" (top-right-bottom-left)
	.#{$marginKey}#{$allKey}#{$separator}#{$sizeKey} {
		margin: size-value($sizeValue);
	}

	.#{$paddingKey}#{$allKey}#{$separator}#{$sizeKey} {
		padding: size-value($sizeValue);
	}

	// vertical (top-bottom)
	.#{$marginKey}#{$verticalKey}#{$separator}#{$sizeKey} {
		margin-top: size-value($sizeValue);
		margin-bottom: size-value($sizeValue);
	}

	.#{$paddingKey}#{$verticalKey}#{$separator}#{$sizeKey} {
		padding-top: size-value($sizeValue);
		padding-bottom: size-value($sizeValue);
	}

	// horizontal (left-right)
	.#{$marginKey}#{$horizontalKey}#{$separator}#{$sizeKey} {
		margin-left: size-value($sizeValue);
		margin-right: size-value($sizeValue);
	}

	.#{$paddingKey}#{$horizontalKey}#{$separator}#{$sizeKey} {
		padding-left: size-value($sizeValue);
		padding-right: size-value($sizeValue);
	}

	// each of top,right,bottom,left:
	@each $posKey, $posValue in $positions {
		.#{$marginKey}#{$posKey}#{$separator}#{$sizeKey} {
			margin-#{$posValue}: size-value($sizeValue);
		}

		.#{$paddingKey}#{$posKey}#{$separator}#{$sizeKey} {
			padding-#{$posValue}: size-value($sizeValue);
		}
	}
}

/*
 * .scss que crea los tamaños de iconos.
 * Éste scss genera múltiples clases como:
 * .ar-icon-xs que crea un tamaño de ícono de 0.875em (14px).
 * Acepta los tamaños xs, sm, md, lg, xlg, 2x, 3x, 4x, 5x, 6x, 7x, 8x, 9x, 10x.
 * Unidades en em.
*/

$sizeUnit: em;
$marginKey: "ar-icons";
$separator: "-";
$sizes: (
	none: 0,
	xs: 0.875,
	sm: 1.5,
	md: 2,
	xmd: 3,
	lg: 4,
	xlg: 8,
	2x: 2,
	3x: 3,
	4x: 4,
	5x: 5,
	6x: 6,
	7x: 7,
	8x: 8,
	9x: 9,
	10x: 10,
);

@function size-value($value) {
	@if $value==0 {
		@return $value;
	}

	@if $value== "auto" {
		@return $value;
	}

	@return #{$value}#{$sizeUnit};
}

@each $sizeKey, $sizeValue in $sizes {
	// "all" (sizes)
	.#{$marginKey}#{$separator}#{$sizeKey} {
		font-size: size-value($sizeValue);
	}
}

/*
 * .scss que crea el Search Bar.
 * Éste scss genera la barra de búsqueda
*/

.ar-searchbar-toolbar {
	background: transparent !important;
	-webkit-transition-timing-function: linear;
	transition-timing-function: linear;
	z-index: 99;
	@include height(64);
}

.ar-searchbar {
	display: flex;
	border-radius: 8px;
	box-shadow: none;
	@include border-radius(24px);
	z-index: 3;
	@include height(44);
	margin: 0 auto;
	// width: 482px;
	border: 1px solid rgba(0, 0, 0, 0.16);
	background-color: rgba(var(--ar-color-white), 0.08);
}

.ar-searchbar:hover {
	border-color: none !important;
	box-shadow: 0 1px 6px 0 rgba(32, 33, 36, 0.28);
	transition: box-shadow 400ms cubic-bezier(0.4, 0, 0.2, 1);
}

.ar-searchbar-input {
	border: none;
	font: normal 14px Roboto, sans-serif;
	@include height(34);
	outline: none;
	padding: 0;
	width: 100%;
	background: transparent;
}

.ar-searchbar:focus-within {
	background-color: rgba(var(--ar-color-white), 0.12);
}

/*
 * .scss que crea los chips.
 * Éste scss genera los chips de acuerdo al estilo de diseño Arca.
 * Acepta los tamaños xs, sm y círculo tamaño sm. 
*/

.ar-chips-green {
	border: 1px solid rgba(var(--ar-color-green), 1) !important;
	background-color: rgba(var(--ar-color-green), 0.08) !important;
}

.ar-chips-blue {
	border: 1px solid rgba(var(--ar-color-blue), 1) !important;
	background-color: rgba(var(--ar-color-blue), 0.08) !important;
}

.ar-chips-red {
	border: 1px solid rgba(var(--ar-color-red), 1) !important;
	background-color: rgba(var(--ar-color-red), 0.08) !important;
}

.ar-chips-yellow {
	border: 1px solid rgba(var(--ar-color-yellow), 1) !important;
	background-color: rgba(var(--ar-color-yellow), 0.08) !important;
}

.ar-chips-orange {
	border: 1px solid rgba(var(--ar-color-orange), 1) !important;
	background-color: rgba(var(--ar-color-orange), 0.08) !important;
}

.ar-chips-bw {
	@include customize(theme) {
		border-color: getValue(arColor12);
		border: 1px solid;
	}

	background-color: transparent !important;
}

.ar-chips-transparent {
	border: 1px solid transparent !important;
	background-color: transparent !important;
	font-size: 12px !important;

	@include customize(theme) {
		color: getValue(arColor87);
	}
}

/*
 * .scss que crea los chips.
 * Éste scss genera los chips de acuerdo al estilo de diseño Arca.
 * Acepta los tamaños xs, sm y círculo tamaño sm.   
*/

/* Estilos de los chips */

.ar-chips {
	@include customize(theme) {
		border-color: getValue(arColor12);
		border: 1px solid;
		color: getValue(arColor87);
	}

	background-color: transparent !important;
	font-size: 12px !important;
	-webkit-font-smoothing: antialiased;
	z-index: 10;
}

.ar-chips-circle {
	@include customize(theme) {
		border-color: getValue(arColor12);
		border: 1px solid;
		color: getValue(arColor54);
	}

	background-color: transparent !important;
	z-index: 10;
	padding: 7px 4px !important;
}

.ar-chips-xs {
	@include customize(theme) {
		border-color: getValue(arColor12);
		border: 1px solid;
		color: getValue(arColor87);
	}

	background-color: transparent !important;
	-webkit-font-smoothing: antialiased;
	z-index: 10;
	font-size: 10px !important;
	min-height: 18px !important;
}

.ar-chips-sm {
	@include customize(theme) {
		color: getValue(arColor87);
	}

	-webkit-font-smoothing: antialiased;
	z-index: 10;
	font-size: 10px !important;
	min-height: 22px !important;
	font-weight: 700;
	padding: 0 16px !important;
}

/* Chip seleccionado */

.ar-chips-selected {
	@include customize(theme) {
		border-color: getValue(arColor12);
		border: 1px solid;
	}

	@include customize(theme) {
		background-color: getValue(arBackgroundThemeColor);
		background-color: getValue(arBackgroundChipColor);
		color: getValue(arColorInverse);
	}

	font-size: 12px !important;
	-webkit-font-smoothing: antialiased;

	mat-icon {
		@include customize(theme) {
			color: getValue(arColorInverse);
		}
	}
}

/* Chip verde */

.ar-chips-green {
	@include customize(theme) {
		border: 1px solid rgba(var(--ar-color-green), 0.54);
	}

	-webkit-font-smoothing: antialiased;
	font-size: 10px !important;
	min-height: 18px !important;
	color: rgba(var(--ar-color-white), 0.87) !important;
	background-color: rgba(var(--ar-color-green), 0.54) !important;
}

/*
 * .scss que crea estilos del toolbar.
 * Éste scss genera los toolbar de acuerdo al estilo de diseño Arca.
*/

/* Estilos de los chips */

.ar-toolbar {
	@include customize(theme) {
		background-color: getValue(arBackgroundThemeColor);
		color: getValue(arColor54);
	}

	z-index: 10;
	@include height(74);
}

/*
 * .scss que crea los avatares.
 * Éste scss genera los avatares de acuerdo a la linea de diseño Arca.
 * Acepta los colores de borde azul, naranja, rojo, verde y amarillo.
*/

// Ávatar base
.ar-avatar p {
	display: inline-block;
	text-align: center;
	@include border-radius(50%);
	transition: 0.3s linear;
	cursor: pointer;

	@include customize(theme) {
		color: getValue(arColor87);
	}

	border: 1px solid white;
}

// Tamaño de ávatar xs
.ar-avatar-xs {
	@include width-height(36, 36);
	font-size: 12px;
	line-height: 32px;
}

// Tamaño de ávatar sm
.ar-avatar-sm {
	@include width-height(48, 48);
	font-size: 12px;
	line-height: 44px;
}

// Colores del borde del ávatar

.ar-avatar-bw p {
	display: inline-block;
	text-align: center;
	@include border-radius(50%);
	transition: 0.3s linear;
	cursor: pointer;
	border: 1px solid;

	@include customize(theme) {
		border-color: getValue(arColor12) !important;

		color: getValue(arColor87) !important;
	}
}

.ar-avatar-blue {
	border: 1px solid #2196f3 !important;
	background-color: rgba(var(--ar-color-blue), 0.08) !important;
}

.ar-avatar-green {
	border: 1px solid #4caf50 !important;
	background-color: rgba(var(--ar-color-green), 0.08) !important;
}

.ar-avatar-red {
	border: 1px solid #f44336 !important;
	background-color: rgba(var(--ar-color-red), 0.08) !important;
}

.ar-avatar-yellow {
	border: 1px solid #ffeb3b !important;
	background-color: rgba(var(--ar-color-yellow), 0.08) !important;
}

.ar-avatar-orange {
	border: 1px solid #ff9800 !important;
	background-color: rgba(var(--ar-color-orange), 0.08) !important;
}

.ar-avatar-cyan {
	border: 1px solid #00bcd4 !important;
	background-color: rgba(var(--ar-color-cyan), 0.08) !important;
}

.ar-avatar-purple {
	border: 1px solid #9c27b0 !important;
	background-color: rgba(var(--ar-color-purple), 0.08) !important;
}

.ar-avatar-lime {
	border: 1px solid #8bc34a !important;
	background-color: rgba(var(--ar-color-lime), 0.08) !important;
}

.ar-avatar-amber {
	border: 1px solid #ffc107 !important;
	background-color: rgba(var(--ar-color-amber), 0.08) !important;
}

.ar-avatar-teal {
	border: 1px solid #009688 !important;
	background-color: rgba(var(--ar-color-amber), 0.08) !important;
}

/*
 * .scss que crea listados con ávatar y hover en xs y sm.
 * Éste scss genera los avatares y las listas utilizadas en áreas de filtrados.
 * Acepta una línea de texto ar-body-1 ar-color-87 como recomendación (para xs).
*/

.ar-list-item-xs {
	cursor: pointer;
	@include height(50);
	padding: 10px;
	@include border-radius(25px);
	outline: 0 !important;

	@include customize(theme) {
		background-color: getValue(arColor01);
	}

	// Ávatar de listado
	.ar-avatar-xs {
		@include width-height(40, 40);
		font-size: 15px;
		line-height: 38px;
		border: 0px solid transparent;

		@include customize(theme) {
			background-color: getValue(arElevation01);
		}

		&:hover {
			background-color: rgba(var(--ar-color-orange), 1) !important;
		}
	}

	&:hover {
		.ar-avatar-xs {
			background-color: rgba(var(--ar-color-orange), 1) !important;
		}

		@include customize(theme) {
			background-color: getValue(arColor02);
		}
	}
}

.ar-list-item-sm {
	cursor: pointer;
	padding: 8px;
	@include border-radius(8px);
	outline: 0 !important;

	// Ávatar de listado
	.ar-avatar-sm {
		@include width-height(46, 46);
		font-size: 11px;
		line-height: 42px;

		&:hover {
			background-color: rgba(255, 152, 0, 0.44) !important;
		}
	}

	&:hover {
		.ar-avatar-sm {
			background-color: rgba(255, 152, 0, 0.34) !important;
		}

		@include customize(theme) {
			background-color: getValue(arColor01);
		}
	}
}

//Mixin para el tamaño de tipografía
//******************************************
@mixin font($fontSize, $lineHeight) {
	font-size: ($fontSize/$basicSize) + em;
	// line-height: ($lineHeight/$fontSize)+em;
}

/*
 * .scss que los diferentes tamaños de las tipografías.
 * Éste scss tamaños e tipografías estándar de acuerdo a línea de diseño arca,
 * eliminado márgenes innecesarios de las tipografías de Angular Material y
 * calcula tamaño en em.
 * Acepta ar-display-4, ar-display-3, ar-display-2, ar-display-1, ar-headline,
 * ar-title, ar-h3, ar-h4, ar-body-1, ar-body-2,ar-caption
*/

.ar-display-4 {
	@include font(114, 2);
	-webkit-font-smoothing: antialiased;
	font-weight: 300;
}

.ar-display-3 {
	@include font(56, 2);
	-webkit-font-smoothing: antialiased;
	font-weight: 400;
}

.ar-display-2 {
	@include font(45, 2);
	-webkit-font-smoothing: antialiased;
	font-weight: 400;
}

.ar-display-1 {
	@include font(34, 2);
	-webkit-font-smoothing: antialiased;
	font-weight: 400;
}

.ar-headline,
.ar-h1 {
	@include font(24, 2);
	-webkit-font-smoothing: antialiased;
	font-weight: 400;
}

.ar-title,
.ar-h2 {
	@include font(20, 3);
	-webkit-font-smoothing: antialiased;
	font-weight: 500;
}

.ar-h3 {
	@include font(16, 4);
	-webkit-font-smoothing: antialiased;
	font-weight: 400;
}

.ar-h4 {
	@include font(15, 1);
	-webkit-font-smoothing: antialiased;
	font-weight: 400;
}

.ar-body-1 {
	@include font(14, 6);
	-webkit-font-smoothing: antialiased;
	font-weight: 400;
}

.ar-body-2 {
	@include font(14, 7);
	-webkit-font-smoothing: antialiased;
	font-weight: 500;
}

.ar-caption {
	@include font(12, 7);
	-webkit-font-smoothing: antialiased;
	font-weight: 400;
	line-height: 1.4em;
}

.ar-text-center {
	text-align: center;
}

/*
 * .scss que crea la etiqueta flotante del ambiente actual.
 * Se emplea en el sidenav y el login
 * Etiqueta solamente para cualquier ambiente menos producción.
*/

.ar-label {
	cursor: pointer;
	position: fixed;
	z-index: 99 !important;
	min-width: 340px !important;
	top: 30%;
	left: -130px !important;
	transform: rotate(-90deg);

	.ar-label-container {
		@include border-radius(4px);
		opacity: 1;

		.text {
			opacity: 0;
		}

		&:hover {
			opacity: 1;

			.text {
				font-family: Inconsolata, monospace;
				text-transform: uppercase;
				font-size: 14px !important;
				font-weight: bold;
				letter-spacing: 0.12em;
				-webkit-font-smoothing: antialiased;
				@include border-radius(4px);
				opacity: 1;
				-webkit-transition: opacity 1s ease-in-out;
				-moz-transition: opacity 1s ease-in-out;
				-ms-transition: opacity 1s ease-in-out;
				-o-transition: opacity 1s ease-in-out;
				transition: opacity 1s ease-in-out;
				width: 220px;
				min-height: 50px;
			}
		}

		.icon {
			opacity: 1 !important;
			@include border-radius(4px);
			transform: rotate(90deg);
			color: rgba(var(--ar-color-orange), 1);
			min-width: 50px;
			min-height: 50px;
		}
	}
}

/*
 * .scss de la barra de navegación en los Home.
 * Consiste en un menú flotante inferior
 * Incluye una imagen background decorativa 
*/

// Imagen de fondo en los Home

.ar-core-background {
	// Indicar SIEMPRE el nombre del servidor de recursos Web a travez de las variables definidas en el styles.scss
	background-image: url(#{$webKitServer}/images/home/arcaHomeBackDark.svg);
	box-shadow: none;
	background-size: cover;
	height: 100%;
	overflow: hidden;
	width: 100%;
}

// Toolbar footer

.ar-footer-bar { 
	@include height(64);
	padding: 0 16px; 
  }
  
  .ar-footer-bar-button {
	:hover {
	  color: rgba(var(--ar-color-orange), 1) !important;
	  transition: 0.5s ease;
	  -webkit-transition: 0.5s ease;
	  -moz-transition: 0.5s ease;
	}
  }
  
  .ar-footer-bar-container {
	z-index: 99;
  }
  
  // Text
  
  .ar-core-caption {
	font-size: 0.8rem;
	font-family: "Mada", sans-serif;
  }
  
  .ar-core-text {
	font-size: 1rem;
	font-family: "Mada", sans-serif;
  }
  
  .ar-core-headline {
	font-size: 1.4rem;
	margin: 0 0 16px;
	font-family: "Mada", sans-serif;
  }
  
  .ar-core-code {
	font-size: 1rem;
	font-family: Inconsolata, monospace;
  }
  
  .ar-core-title {
	font-size: 1.3rem;
	font-family: "Mada", sans-serif;
  }